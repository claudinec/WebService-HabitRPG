package WebService::HabitRPG;
use v5.010;
use strict;
use warnings;
use autodie;
use Moo;
use WWW::Mechanize; # Probably overkill

# ABSTRACT: Perl interface to the HabitRPG API

# VERSION: Generated by DZP::OurPkg:Version

=for Pod::Coverage BUILD DEMOLISH

=cut

has 'api_token' => (is => 'ro'); # aka x-api-key
has 'user_id'   => (is => 'ro'); # aka x-api-user
has 'agent'     => (is => 'rw');

use constant URL_BASE => 'http://habitrpg.com/api/v1';

sub BUILD {
    my ($self, $args) = @_;

    # Set a default agent if we don't already have one.

    if (not $self->agent) {
        $self->agent(
            WWW::Mechanize->new(
                agent => "Perl/$], WebService::HabitRPG/" . $self->VERSION,
            )
        );
    }

    return;
}

sub user {
    my ($self) = @_;

    my $req = $self->_request('GET', '/user');

    my $response = $self->agent->request( $req );

    return $response->decoded_content;

}

sub user_tasks {
    my ($self) = @_;

    my $req = $self->_request('GET', '/user/tasks');

    my $response = $self->agent->request( $req );

    return $response->decoded_content;
}

sub _request {
    my ($self, $type, $url) = @_;

    my $req = HTTP::Request->new( $type, URL_BASE . $url );
    $req->header( 'Content-Type' => 'application/json');
    $req->header( 'x-api-user'   => $self->user_id    );
    $req->header( 'x-api-key'    => $self->api_token  );

    return $req;
}

1;
